-module(list_functions).
-export([product/1, product_rec/1, list_max/1, max_tail/1]).

%direct calculation of product
product([])->1;
product([H|T])-> H * product(T).

%tail recursive calculaton of product
product_rec(X) ->product_rec(X,1).
product_rec([], Acc) ->Acc;
product_rec([H|T],Acc) ->product_rec(T, H * Acc).

%direct recursion for finding max of list
list_max([H]) -> H;
list_max([H|T]) -> max(H, list_max(T)).

%tail recursion for finding max of list
max_tail([H|T]) ->max_tail(T, H).
max_tail([],Acc1) -> Acc1;
max_tail([H|T], Acc1)  -> max_tail(T, max(H, Acc1)).
